// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	context "context"
	reflect "reflect"

	model "github.com/d.tovstoluh/the-one-go-mid-test/rest-api/model"
	gomock "github.com/golang/mock/gomock"
)

// MockTaskStorage is a mock of TaskStorage interface.
type MockTaskStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTaskStorageMockRecorder
}

// MockTaskStorageMockRecorder is the mock recorder for MockTaskStorage.
type MockTaskStorageMockRecorder struct {
	mock *MockTaskStorage
}

// NewMockTaskStorage creates a new mock instance.
func NewMockTaskStorage(ctrl *gomock.Controller) *MockTaskStorage {
	mock := &MockTaskStorage{ctrl: ctrl}
	mock.recorder = &MockTaskStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskStorage) EXPECT() *MockTaskStorageMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockTaskStorage) Delete(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTaskStorageMockRecorder) Delete(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTaskStorage)(nil).Delete), ctx, id)
}

// Get mocks base method.
func (m *MockTaskStorage) Get(ctx context.Context, id string) (*model.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*model.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTaskStorageMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTaskStorage)(nil).Get), ctx, id)
}

// GetAll mocks base method.
func (m *MockTaskStorage) GetAll(ctx context.Context) ([]*model.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]*model.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTaskStorageMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTaskStorage)(nil).GetAll), ctx)
}

// Save mocks base method.
func (m *MockTaskStorage) Save(ctx context.Context, data *model.Task) (*model.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, data)
	ret0, _ := ret[0].(*model.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockTaskStorageMockRecorder) Save(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockTaskStorage)(nil).Save), ctx, data)
}
